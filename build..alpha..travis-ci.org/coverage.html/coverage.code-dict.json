{"/home/travis/build/npmtest/node-npmtest-react-google-places-suggest/test.js":"/* istanbul instrument in package npmtest_react_google_places_suggest */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-google-places-suggest/lib.npmtest_react_google_places_suggest.js":"/* istanbul instrument in package npmtest_react_google_places_suggest */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_google_places_suggest = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_google_places_suggest = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-google-places-suggest/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-google-places-suggest && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_google_places_suggest */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_google_places_suggest\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_google_places_suggest.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_google_places_suggest.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_google_places_suggest.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_google_places_suggest.__dirname + '/lib.npmtest_react_google_places_suggest.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-google-places-suggest/node_modules/react-google-places-suggest/lib/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GooglePlacesSuggest = function (_Component) {\n  _inherits(GooglePlacesSuggest, _Component);\n\n  function GooglePlacesSuggest() {\n    _classCallCheck(this, GooglePlacesSuggest);\n\n    var _this = _possibleConstructorReturn(this, (GooglePlacesSuggest.__proto__ || Object.getPrototypeOf(GooglePlacesSuggest)).call(this));\n\n    _this.state = {\n      coordinate: null,\n      googleMaps: null,\n      focusedSuggestIndex: 0,\n      selectedLabel: \"\",\n      suggests: []\n    };\n\n    _this.handleKeyDown = _this.handleKeyDown.bind(_this);\n    return _this;\n  }\n\n  _createClass(GooglePlacesSuggest, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.updateSuggests(this.props.search);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.updateSuggests(nextProps.search);\n    }\n  }, {\n    key: \"handleSelectSuggest\",\n    value: function handleSelectSuggest(suggest) {\n      var _this2 = this;\n\n      var onSelectSuggest = this.props.onSelectSuggest;\n\n\n      this.geocodeSuggest(suggest.description, function () {\n        _this2.setState({ selectedLabel: suggest.description, suggests: [] }, function () {\n          onSelectSuggest(suggest, _this2.state.coordinate);\n        });\n      });\n    }\n  }, {\n    key: \"updateSuggests\",\n    value: function updateSuggests(search) {\n      var _this3 = this;\n\n      var _props = this.props,\n          googleMaps = _props.googleMaps,\n          suggestRadius = _props.suggestRadius,\n          suggestTypes = _props.suggestTypes,\n          suggestComponentRestrictions = _props.suggestComponentRestrictions;\n\n      var autocompleteService = new googleMaps.places.AutocompleteService();\n\n      if (!search) {\n        this.setState({ suggests: [] });\n        return;\n      }\n\n      autocompleteService.getPlacePredictions({\n        input: search,\n        location: new googleMaps.LatLng(0, 0),\n        radius: suggestRadius,\n        types: suggestTypes,\n        componentRestrictions: suggestComponentRestrictions\n      }, function (googleSuggests) {\n        if (!googleSuggests) {\n          _this3.setState({ suggests: [] });\n          return;\n        }\n\n        _this3.setState({\n          focusedSuggestIndex: 0,\n          suggests: googleSuggests\n        });\n      });\n    }\n  }, {\n    key: \"geocodeSuggest\",\n    value: function geocodeSuggest(suggestLabel, callback) {\n      var _this4 = this;\n\n      var googleMaps = this.props.googleMaps;\n\n      var geocoder = new googleMaps.Geocoder();\n\n      geocoder.geocode({ address: suggestLabel }, function (results, status) {\n        if (status === googleMaps.GeocoderStatus.OK) {\n          var location = results[0].geometry.location;\n          var coordinate = {\n            latitude: location.lat(),\n            longitude: location.lng(),\n            title: suggestLabel\n          };\n\n          _this4.setState({ coordinate: coordinate }, callback);\n        }\n      });\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(e) {\n      var _state = this.state,\n          focusedSuggestIndex = _state.focusedSuggestIndex,\n          suggests = _state.suggests;\n\n\n      if (suggests.length > 0) {\n        if (e.key === \"Enter\") {\n          this.handleSelectSuggest(suggests[focusedSuggestIndex]);\n        } else if (e.key === \"ArrowUp\") {\n          if (suggests.length > 0 && focusedSuggestIndex > 0) {\n            this.focusSuggest(focusedSuggestIndex - 1);\n          }\n        } else if (e.key === \"ArrowDown\") {\n          if (suggests.length > 0 && focusedSuggestIndex < suggests.length - 1) {\n            this.focusSuggest(focusedSuggestIndex + 1);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"focusSuggest\",\n    value: function focusSuggest(index) {\n      this.setState({ focusedSuggestIndex: index });\n    }\n  }, {\n    key: \"renderNoResults\",\n    value: function renderNoResults() {\n      var textNoResults = this.props.textNoResults;\n\n\n      if (textNoResults === null) {\n        return;\n      }\n\n      return _react2.default.createElement(\n        \"li\",\n        { className: \"placesSuggest_suggest\" },\n        textNoResults\n      );\n    }\n  }, {\n    key: \"renderDefaultSuggest\",\n    value: function renderDefaultSuggest(suggest) {\n      var description = suggest.description,\n          structured_formatting = suggest.structured_formatting;\n\n      var firstMatchedString = structured_formatting.main_text_matched_substrings.shift();\n      var labelParts = null;\n\n      if (firstMatchedString) {\n        labelParts = {\n          before: description.substr(0, firstMatchedString.offset),\n          matched: description.substr(firstMatchedString.offset, firstMatchedString.length),\n          after: description.substr(firstMatchedString.offset + firstMatchedString.length)\n        };\n      }\n\n      return _react2.default.createElement(\n        \"div\",\n        null,\n        _react2.default.createElement(\n          \"span\",\n          { className: \"placesSuggest_suggestLabel\" },\n          labelParts ? _react2.default.createElement(\n            \"span\",\n            null,\n            labelParts.before.length > 0 ? _react2.default.createElement(\n              \"span\",\n              null,\n              labelParts.before\n            ) : null,\n            _react2.default.createElement(\n              \"span\",\n              { className: \"placesSuggest_suggestMatch\" },\n              labelParts.matched\n            ),\n            labelParts.after.length > 0 ? _react2.default.createElement(\n              \"span\",\n              null,\n              labelParts.after\n            ) : null\n          ) : description\n        )\n      );\n    }\n  }, {\n    key: \"renderSuggest\",\n    value: function renderSuggest(suggest) {\n      var renderSuggest = this.props.renderSuggest;\n\n      return renderSuggest ? this.renderSuggest(suggest) : this.renderDefaultSuggest(suggest);\n    }\n  }, {\n    key: \"renderSuggests\",\n    value: function renderSuggests() {\n      var _this5 = this;\n\n      var _state2 = this.state,\n          focusedSuggestIndex = _state2.focusedSuggestIndex,\n          suggests = _state2.suggests;\n\n      return _react2.default.createElement(\n        \"ul\",\n        { className: \"placesSuggest_suggests\" },\n        suggests.length > 0 ? suggests.map(function (suggest, key) {\n          return _react2.default.createElement(\n            \"li\",\n            {\n              key: key,\n              className: \"placesSuggest_suggest \" + (focusedSuggestIndex === key && \"placesSuggest_suggest-active\"),\n              onClick: function onClick() {\n                return _this5.handleSelectSuggest(suggest);\n              }\n            },\n            _this5.renderSuggest(suggest)\n          );\n        }) : this.renderNoResults()\n      );\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selectedLabel = this.state.selectedLabel;\n      var _props2 = this.props,\n          children = _props2.children,\n          search = _props2.search;\n\n      return _react2.default.createElement(\n        \"div\",\n        { className: \"placesSuggest\", onKeyDown: this.handleKeyDown },\n        children,\n        search && selectedLabel !== search && this.renderSuggests()\n      );\n    }\n  }]);\n\n  return GooglePlacesSuggest;\n}(_react.Component);\n\nGooglePlacesSuggest.propTypes = {\n  children: _react.PropTypes.any.isRequired,\n  googleMaps: _react.PropTypes.object.isRequired,\n  onSelectSuggest: _react.PropTypes.func,\n  renderSuggest: _react.PropTypes.func,\n  search: _react.PropTypes.string,\n  suggestRadius: _react.PropTypes.number,\n  suggestTypes: _react.PropTypes.array,\n  suggestComponentRestrictions: _react.PropTypes.object,\n  textNoResults: _react.PropTypes.string\n};\n\nGooglePlacesSuggest.defaultProps = {\n  onSelectSuggest: function onSelectSuggest() {},\n  search: \"\",\n  suggestRadius: 20,\n  suggestTypes: [],\n  suggestComponentRestrictions: {\n    country: \"\"\n  },\n  textNoResults: \"No results\"\n};\n\nexports.default = GooglePlacesSuggest;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=index.js.map"}